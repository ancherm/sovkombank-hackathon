spring.application.name=server

spring.config.import=optional:dotenv:

# Encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Database
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8082/realms/keycloak
#    ${SPRING_SECURITY_ISSUER_URI}
keycloak.admin.server-url=http://localhost:8082
keycloak.admin.realm=keycloak
keycloak.admin.client-id=spring-boot
keycloak.admin.grant-type=password
keycloak.admin.username=admin
keycloak.admin.password=admin

# Realm, в котором мы создаём пользователей
keycloak.realm=keycloak


spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_RESOURCE}
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_SECRET}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,email,profile

spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_AUTH_SERVER_URL}/realms/${KEYCLOAK_REALM}

# JPA
spring.jpa.hibernate.ddl-auto=validate

# Logging
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind =trace
logging.level.org.springframework.jdbc.datasource=DEBUG
logging.level.org.springdoc=DEBUG
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
