version: '3.8'
name: "sovkombank-hackathon"

services:
  postgres:
    image: postgres
    container_name: postgres-sovkombank-hackathon
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - main

  client:
    build:
      context: ./client
      dockerfile: Dockerfile-client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:80"
    command: npm run dev
    networks:
      - main

  server:
    build:
      context: ./server
      dockerfile: Dockerfile-server
    volumes:
      - ./server/pom.xml:/app/pom.xml
      - ./server/src:/app/src
      - maven_cache:/root/.m2
    ports:
      - "8080:8080"
    env_file:
      - ".env-docker"
#    command: mvn spring-boot:run -Dspring-boot.run.fork=false
#    environment:
#      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
#      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
#      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    depends_on:
      - postgres
    networks:
      - main

  model-service:
    build:
      context: ./model-service
      dockerfile: Dockerfile-modelservice
    volumes:
      - ./model-service:/app
      - pip_cache:/root/.cache/pip
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - server
    networks:
      - main

networks:
  main:

volumes:
  postgres_db_data:
  maven_cache:
  pip_cache: